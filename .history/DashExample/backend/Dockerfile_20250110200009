This particular error:

AttributeError: 'vtkmodules.vtkCommonCore.vtkPoints' object has no attribute 'dtype'

often occurs when PyVista and VTK are out of sync (or if NumPy is missing). Essentially, PyVista expects to convert certain VTK objects into NumPy arrays, but the installed version of VTK either:

    Lacks the NumPy “bridge” features that PyVista depends on, or
    Isn’t the version that PyVista expects based on its own pinned requirements.

Below are key steps to fix it:
1. Add All Required Dependencies

    Include NumPy in your requirements.txt (PyVista needs it).
    Pin compatible versions of pyvista and vtk so they install together without conflict.

For example, in your backend/requirements.txt, try something like:

Flask==2.3.3
Werkzeug==2.3.6
pyvista==0.38.4
vtk==9.2.6
numpy==1.24.0

(You can adjust version pins as needed, but make sure PyVista, VTK, and NumPy are all installed.)
2. Make Sure System Libraries Are Installed

Since PyVista (and VTK) use 3D/graphical libraries, you need the right apt packages. For example (in your backend/Dockerfile):

FROM python:3.9-slim

# Ensure pip is up to date and install system libs that VTK often needs
RUN apt-get update && apt-get install -y \
    libgl1-mesa-glx \
    libxext6 \
    libxrender1 \
    libsm6 \
    libx11-6 \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Upgrade pip (helps ensure wheel-based installs)
RUN pip install --upgrade pip

COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY main.py .

RUN mkdir data_output
EXPOSE 5000

CMD ["python", "main.py"]